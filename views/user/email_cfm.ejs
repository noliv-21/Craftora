<style>
  .toast_style{
        width: fit-content;
        max-width: 300px;
        border-radius: 8px;
        padding: 12px 20px;
        border: 1px solid rgba(255, 0, 0, 0.3);
        font-family: Arial, sans-serif;
        font-size: 16px;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
        position: absolute;
        top: 20px;
        right: 20px;
    }

    :root {
    --primary-color: #4a90e2;
    --secondary-color: #f5f5f5;
    --text-color: #333;
    --error-color: #ff4d4d;
    --success-color: #2ecc71;
  }

  .container {
    min-height: 100vh;
    display: flex;
    justify-content: center;
    align-items: center;
    background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
  }

  .otp_box {
    background: white;
    padding: 2.5rem;
    border-radius: 20px;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
    width: 100%;
    max-width: 400px;
    transform: translateY(0);
    transition: transform 0.3s ease, box-shadow 0.3s ease;
  }

  .otp_box:hover {
    transform: translateY(-5px);
    box-shadow: 0 15px 35px rgba(0, 0, 0, 0.15);
  }

  .otp_box h2 {
    color: var(--text-color);
    text-align: center;
    margin-bottom: 2rem;
    font-size: 1.8rem;
    font-weight: 600;
  }

  .user-box {
    position: relative;
    margin-bottom: 2rem;
  }

  .user-box input {
    width: 100%;
    padding: 15px;
    font-size: 1rem;
    border: 2px solid #e1e1e1;
    border-radius: 12px;
    background: transparent;
    transition: all 0.3s ease;
    margin-bottom: 1rem;
  }

  .user-box input:focus {
    outline: none;
    border-color: var(--primary-color);
    box-shadow: 0 0 0 3px rgba(74, 144, 226, 0.1);
  }

  .user-box label {
    display: block;
    margin-bottom: 0.5rem;
    color: #666;
    font-size: 0.9rem;
    transition: color 0.3s ease;
  }

  #otp_error {
    color: var(--error-color);
    font-size: 0.85rem;
    margin-top: 0.5rem;
    display: block;
  }

  #timer {
    color: var(--primary-color);
    font-weight: 600;
  }

  .btn {
    width: 100%;
    padding: 12px;
    border: none;
    border-radius: 12px;
    font-size: 1rem;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s ease;
    margin-top: 1rem;
  }

  .btn-primary {
    background: var(--primary-color);
    color: white;
  }

  .btn-primary:hover {
    background: #357abd;
    transform: translateY(-2px);
  }

  .btn-success {
    background: var(--success-color);
    color: white;
  }

  .btn-success:hover {
    background: #27ae60;
    transform: translateY(-2px);
  }

  .btn:disabled {
    opacity: 0.6;
    cursor: not-allowed;
    transform: none;
  }

  .toast_style {
    backdrop-filter: blur(8px);
    animation: slideIn 0.3s ease-out;
  }

  @keyframes slideIn {
    from {
      transform: translateX(100%);
      opacity: 0;
    }
    to {
      transform: translateX(0);
      opacity: 1;
    }
  }

  @media (max-width: 480px) {
    .otp_box {
      margin: 1rem;
      padding: 1.5rem;
    }
  }
</style>
<div class="container">
  <div class="otp_box">
    <h2>Confirm your E-Mail</h2>
    <form action="/user/verify_otp" method="post">
      <div class="user-box">
        <input type="text" name="otp" id="otp-input" required="">
        <label>OTP</label>
        <span style="color:red;" id="otp_error"></span>
        <label>Didn't get the OTP? Try again in <span id="timer">30</span> seconds</label>
        <button class="btn btn-primary" type="submit">Verify OTP</button>
      </div>
    </form>
    <button class="btn btn-success" type="button" id="resend-btn" disabled onclick="resendOtp()">Resend OTP</button>
  </div>
</div>
<script src="JS/user/functionings.js"></script>
<script>
  async function resendOtp() {
    try {
        const response = await axios.post('/user/otp_resend');
        if (response.status === 200) {
            Toastify({
                text: response.data.message,
                duration: 2000,
                gravity: "top",
                position: "right",
                backgroundColor: "linear-gradient(135deg, rgba(238, 174, 202, 0.9), rgba(148, 187, 233, 0.9))",
                stopOnFocus: true,
                className: "toast_style"
            }).showToast();

            // Reload the page after a short delay to allow the toast to be seen
            setTimeout(() => {
                window.location.reload();
            }, 2000);
        } else {
            Toastify({
                text: response.data,
                duration: 3000,
                gravity: "top",
                position: "right",
                backgroundColor: "linear-gradient(135deg, rgba(255, 121, 121, 0.9), rgba(255, 182, 193, 0.9))",
                stopOnFocus: true,
                className: "toast_style"
            }).showToast();
        }
    } catch (error) {
        console.error(error);
        Toastify({
            text: error.response?.data || "An error occurred",
            duration: 3000,
            gravity: "top",
            position: "right",
            backgroundColor: "linear-gradient(135deg, rgba(255, 121, 121, 0.9), rgba(255, 182, 193, 0.9))",
            stopOnFocus: true,
            className: "toast_style"
        }).showToast();
    }
}
</script>