<style>
    body {
        font-family: 'Inter', sans-serif;
    }

    #addedImagesContainer:empty {
        display: none;
    }
</style>
<div class="flex">
    <!-- Sidebar -->
    <%-include('../../partials/admin/side bar')%>
    <!-- Main Content -->
    <div class="flex-1 p-6">
        <%-include('../../partials/admin/header') %>
        <div class="flex w-full">
            <form class="flex w-full" action="/admin/products/add" method="post"
                onsubmit="return validateForm()">
                <div class="p-6 flex-1">
                    <div class="flex justify-between items-center">
                        <h2 class="text-2xl font-semibold text-gray-700">Add Product</h2>
                    </div>
                    <div class="mt-4 text-sm text-gray-500">
                        <a href="/admin/home" class="text-blue-500">Dashboard</a>
                        &gt;
                        <a href="/admin/products" class="text-blue-500">Product List</a>
                        &gt;
                        <span>Add Product</span>
                    </div>
                    <% if (successMessage) { %>
                    <div id="success_div"
                        class="bg-green-500 text-white p-2 mb-5 text-center rounded transition-opacity duration-500 ease-in-out">
                        <p id="success_message">
                            <%= successMessage%>
                        </p>
                    </div>
                    <% } %>
                    <% if (errorMessage) { %>
                    <div id="error_div"
                        class="bg-red-600 text-white p-2 mb-5 text-center rounded transition-opacity duration-500 ease-in-out">
                        <p id="error_message">
                            <%= errorMessage %>
                        </p>
                    </div>
                    <% } %>
                    <div class="mt-6 bg-white p-6 rounded-lg shadow-md">
                        <h3 class="text-lg font-semibold text-gray-700">General Information</h3>
                        <div class="mt-4">
                            <label class="block text-gray-600">Product Name</label>
                            <input type="text" name="name" oninput="validateName()"
                                class="w-full mt-2 p-2 border rounded-md"
                                placeholder="Type product name here...">
                            <p id="nameError" class="text-red-600 text-sm hidden"></p>
                        </div>
                        <div class="mt-4">
                            <label class="block text-gray-600">Description</label>
                            <textarea name="description" oninput="validateDescription()"
                                class="w-full mt-2 p-2 border rounded-md" rows="4"
                                placeholder="Type product description here..."></textarea>
                            <p id="descriptionError" class="text-red-600 text-sm hidden"></p>
                        </div>
                    </div>
                    <div class="mt-6 bg-white p-6 rounded-lg shadow-md">
                        <h3 class="text-lg font-semibold text-gray-700">Media</h3>
                        <input type="file" id="imageInput" class="hidden" accept="image/*">
                        <div
                            class="mt-4 border-dashed border-2 flex flex-col border-gray-300 p-6 rounded-md text-center">
                            <label for="imageInput" class="cursor-pointer">
                                <i class="fas fa-image text-4xl text-gray-300"></i>
                                <p class="mt-2 text-gray-500">Click to add image</p>
                            </label>
                            <button type="button"
                                onclick="document.getElementById('imageInput').click()"
                                class="mt-4 px-4 py-2 bg-purple-500 text-white rounded-md">Add
                                Image
                            </button>
                        </div>
                        <div id="addedImagesContainer" class="thumbnails-container mt-4 gap-2 bg-gray-200 rounded-md grid
                        grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-5"></div>
                        <div id="imageError" class="hidden text-red-500 text-sm mt-2">Please upload at least one image.</div>
                        <!-- Cropper Modal -->
                        <div id="cropperModal"
                            class="image-cropper d-flex flex-col mt-4 align-items-center hidden"
                            style="margin-bottom: 20px;">
                            <img id="imageToCrop" class="object-contain">
                        </div>
                        <button type="button" id="cropButton"
                            class="btn-sm btn-primary hidden">Crop Image</button>
                        <button type="button" id="cancelCropButton"
                            class="btn-sm btn-secondary hidden">Cancel</button>
                    </div>
                    <div class="mt-6 bg-white p-6 rounded-lg shadow-md">
                        <h3 class="text-lg font-semibold text-gray-700">Pricing</h3>
                        <div class="mt-4 flex space-x-2">
                            <div class="w-1/2">
                                <label class="block text-gray-600">Base Price</label>
                                <div class="flex items-center mt-2">
                                    <span
                                        class="px-3 py-2 bg-gray-200 border border-r-0 rounded-l-md">₹</span>
                                    <input type="number" name="price" oninput="validateBasePrice()"
                                        class="w-full p-2 border rounded-r-md"
                                        placeholder="Type base price here...">
                                </div>
                                <p id="priceError" class="text-red-600 text-sm hidden"></p>
                            </div>
                            <div class="w-1/2">
                                <label class="block text-gray-600">Maximum Retail Price</label>
                                <div class="flex items-center mt-2">
                                    <span
                                        class="px-3 py-2 bg-gray-200 border border-r-0 rounded-l-md">₹</span>
                                    <input type="number" name="mrp" oninput="validateMrp()"
                                        class="w-full p-2 border rounded-r-md"
                                        placeholder="Type maximum retail price here...">
                                </div>
                                <p id="mrpError" class="text-red-600 text-sm hidden"></p>
                            </div>
                        </div>
                        <div class="mt-4 flex space-x-4">
                            <div class="w-1/2">
                                <label for="offerType" class="block text-gray-600">Discount
                                    Type</label>
                                <select id="offerType" name="offerType" onchange="handleOfferTypeChange()"
                                    class="w-full mt-2 p-2 border rounded-md">
                                    <% offerTypes.forEach((type,index)=> { %>
                                    <option value="<%= type %>" <%=index===0 ? 'selected'
                                        :'' %>><%= type %>
                                    </option>
                                    <% }) %>
                                </select>
                            </div>
                            <div id="percentageFields" class="hidden flex space-x-2">
                                <div>
                                    <label for="percentage" class="block text-gray-700">Discount Percentage</label>
                                    <div class="flex items-center mt-2">
                                        <input type="number" id="percentage" name="percentage" oninput="validatePercentage()" class="w-full p-2 border rounded-l-md" placeholder="Enter percentage">
                                        <span class="px-3 py-2 bg-gray-200 border border-r-0 rounded-r-md">%</span>
                                    </div>
                                    <p id="percentageError" class="text-red-600 text-sm hidden"></p>
                                </div>
                                <div>
                                    <label for="maxDiscount" class="block text-gray-700">Max Discount Amount</label>
                                    <div class="flex items-center mt-2">
                                        <span class="px-3 py-2 bg-gray-200 border border-r-0 rounded-l-md">₹</span>
                                        <input type="number" id="maxDiscount" oninput="validateMaxDiscountAmt()" name="maxDiscount" class="w-full p-2 border rounded-r-md" placeholder="Enter max discount">
                                    </div>
                                    <p id="maxDiscountError" class="text-red-600 text-sm hidden"></p>
                                </div>
                            </div>
                            
                            <div id="fixedFields" class="hidden">
                                <label for="fixedAmount" class="block text-gray-700">Fixed Discount Amount</label>
                                <div class="flex items-center mt-2">
                                    <span class="px-3 py-2 bg-gray-200 border border-r-0 rounded-l-md">₹</span>
                                    <input type="number" id="fixedAmount" oninput="validateFixedDiscountAmt()" name="fixedAmount" class="w-full p-2 border rounded-r-md" placeholder="Enter fixed discount">
                                </div>
                                <p id="fixedAmountError" class="text-red-600 text-sm hidden"></p>
                            </div>
                        </div>
                    </div>
                    <div class="mt-6 bg-white p-6 rounded-lg shadow-md">
                        <h3 class="text-lg font-semibold text-gray-700">Inventory</h3>
                        <div class="mt-4">
                            <label class="block text-gray-600">Quantity</label>
                            <input type="number" name="stock" oninput="validateQuantity()"
                                class="w-full mt-2 p-2 border rounded-md"
                                placeholder="Type product quantity here...">
                            <p id="quantityError" class="text-red-600 text-sm hidden"></p>
                        </div>
                    </div>
                    <div class="flex justify-end mt-6">
                        <button type="button" onclick="window.location.href='/admin/products'"
                            class="px-4 py-2 bg-gray-200 text-gray-700 rounded-md">Cancel</button>
                        <button type="submit"
                            class="ml-2 px-6 py-2 bg-purple-500 text-white rounded-md">+ Add
                            Product</button>
                    </div>
                </div>
                <!-- Right Sidebar -->
                <div class="w-70 p-6">
                    <div class="mt-6 bg-white p-6 rounded-lg shadow-md">
                        <h3 class="text-lg font-semibold text-gray-700">Category</h3>
                        <div class="mt-4">
                            <label class="block text-gray-600">Product Category</label>
                            <select name="category" class="w-full mt-2 p-2 border rounded-md">
                                <% categories.forEach((category,index)=> { %>
                                <option value="<%= category._id %>" <%=index===0 ? 'selected' : '' %>>
                                    <%= category.name %>
                                </option>
                                <% }) %>
                            </select>
                        </div>
                        <div class="mt-4">
                            <label class="block text-gray-600">Product Tags</label>
                            <input name="tags" oninput="validateTags()" placeholder="Separate the tags using Comma(,)"
                                class="w-full mt-2 p-2 border rounded-md">
                            <p id="tagsError" class="text-red-600 text-sm hidden"></p>
                        </div>
                    </div>
                    <div class="mt-6 bg-white p-6 rounded-lg shadow-md">
                        <h3 class="text-lg font-semibold text-gray-700">Is Listed</h3>
                        <div class="mt-4">
                            <select name="isListed" class="w-full mt-2 p-2 border rounded-md">
                                <option value=true selected>Yes</option>
                                <option value=false>No</option>
                            </select>
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>
<script src="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.js"></script>
<script src="/JS/admin/product.js"></script>
<script src="/JS/admin/productValidation.js"></script>
<script>

    function handleOfferTypeChange() {
        const offerType = document.getElementById('offerType').value;
        
        // Get references to each div
        const percentageFields = document.getElementById('percentageFields');
        const fixedFields = document.getElementById('fixedFields');

        // Hide all fields by default
        percentageFields.classList.add('hidden');
        fixedFields.classList.add('hidden');

        // Show relevant fields based on the selected offer type
        if (offerType === 'Percentage') {
            percentageFields.classList.remove('hidden');

        } else if (offerType === 'Fixed') {
            fixedFields.classList.remove('hidden');
        }
        // No fields to show for 'BOGO' or 'Free Shipping'
    }
    // Initialize the correct fields on page load based on the current selection
    document.addEventListener('DOMContentLoaded', handleOfferTypeChange);

    // Image managing
    let cropper;
    const addedImagesContainer = document.getElementById('addedImagesContainer');
    const imageInput = document.getElementById('imageInput');
    const cropperModal = document.getElementById('cropperModal');
    const imageToCrop = document.getElementById('imageToCrop');
    const cropBtn = document.getElementById('cropButton')
    const cancelCropBtn = document.getElementById('cancelCropButton')

    imageInput.addEventListener('change', function (event) {
        const file = event.target.files[0];
        if (cropper) cropper.destroy();
        if (file) {
            const reader = new FileReader();

            reader.onload = function (e) {
                imageToCrop.src = e.target.result;
                cropperModal.classList.remove('hidden');
                cropperModal.style.width = '300px';
                cropperModal.style.height = '300px';
                cropBtn.classList.remove('hidden')
                cancelCropBtn.classList.remove('hidden')

                // Initialize Cropper.js
                cropper = new Cropper(imageToCrop, {
                    aspectRatio: 1,
                    viewMode: 1,
                    background: false,
                    autoCropArea: 1,
                    zoomable: true,
                });
            };
            reader.readAsDataURL(file); // Read the selected file
        }
    });

    cropBtn.addEventListener('click', function () {
        const croppedCanvas = cropper.getCroppedCanvas();
        const croppedDataURL = croppedCanvas.toDataURL();

        // Check for duplicates
        const existingImages = addedImagesContainer.querySelectorAll('img');
        for (let img of existingImages) {
            if (img.src === croppedDataURL) {
                alert('This image has already been added.');
                return;
            }
        }
        if (existingImages.length >= 5) {
            alert('You can only upload up to 5 images.');
            return;
        }

        const imageContainer = document.createElement('div');
        imageContainer.classList.add('flex', 'relative', 'space-x-2');

        // Create an image element for the cropped image
        const croppedImage = document.createElement('img');
        croppedImage.src = croppedDataURL;
        croppedImage.style.maxWidth = 200; // Set a width for the image
        croppedImage.style.height = 'auto';
        croppedImage.classList.add('rounded-md');


        // Create a hidden input to store the base64 image data
        const hiddenInput = document.createElement('input');
        hiddenInput.type = 'hidden';
        hiddenInput.name = 'images[]'; // Name it to collect as an array
        hiddenInput.value = croppedDataURL;

        // Adding a remove button to each image container
        const removeButton = document.createElement('button');
        removeButton.textContent = '❌'
        removeButton.classList.add(
            'absolute', 'top-[-10px]', 'right-[-10px]', 'z-10', 'bg-gray-200',
            'text-gray-800', 'border-none', 'p-1.5', 'rounded-full', 'cursor-pointer'
        );
        removeButton.onclick = function () {
            imageContainer.remove();
            const existingImages = addedImagesContainer.querySelectorAll('img');
            if (existingImages.length <= 0) {
                addedImagesContainer.classList.remove('p-4')
            }
        };

        imageContainer.appendChild(croppedImage);
        imageContainer.appendChild(hiddenInput);
        imageContainer.appendChild(removeButton);

        // Append the image container to the added images container
        addedImagesContainer.appendChild(imageContainer);
        addedImagesContainer.classList.add('p-4')

        if (addedImagesContainer.querySelectorAll('img').length >= 5) {
            imageInput.classList.add('hidden');
        }

        // Reset the input and close the modal
        imageInput.value = ''; // Reset the input
        // Clear the cropper and hide the modal
        cropper.destroy(); // Destroy the cropper instance
        cropperModal.classList.add('hidden'); // Hide the modal
        cropperModal.style.width = '';
        cropperModal.style.height = '';
        cropBtn.classList.add('hidden')
        cancelCropBtn.classList.add('hidden')
        imageToCrop.src = ''; // Clear the image source
    });

    cancelCropBtn.addEventListener('click', function () {
        cropperModal.classList.add('hidden') // Hide the modal
        cropperModal.style.width = '';
        cropperModal.style.height = '';
        cropBtn.classList.add('hidden')
        cancelCropBtn.classList.add('hidden')
        cropper.destroy();
        imageToCrop.src = '';
    });
</script>