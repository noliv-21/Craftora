<style>
    body {
        font-family: 'Inter', sans-serif;
    }

    .thumbnails-container {
        display: flex;
        overflow-x: auto;
    }

    #addedImagesContainer img {
    max-width: 200px;
    height: auto;
    }

    .thumbnail {
        margin-right: 10px;
    }

    .input-upload {
        position: relative;
    }

    .error-message {
        color: red;
        display: none
    }

    .remove-button {
    display: inline-block; /* Ensure the button doesn't take up full height */
    margin-top: 5px;
    background-color: red;
    color: white;
    border: none;
    padding: 4px 8px;
    cursor: pointer;
    border-radius: 4px;
    height: auto; /* Allow it to fit content */
}
</style>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css">
<div class="flex">
    <!-- Sidebar -->
    <%-include('../../partials/admin/side bar')%>
        <!-- Main Content -->
        <div class="flex-1 p-6">
            <%-include('../../partials/admin/header') %>
                <div class="flex w-full">
                    <form class="flex-1 flex-row w-full" action="/admin/editProduct" method="post" enctype="multipart/form-data">
                        <div class="p-6 flex-1">
                            <div class="flex justify-between items-center">
                                <h2 class="text-2xl font-semibold text-gray-700">Edit Product</h2>
                            </div>
                            <div class="mt-4 text-sm text-gray-500">
                                <a href="/admin/home" class="text-blue-500">Dashboard</a>
                                &gt;
                                <a href="/admin/products" class="text-blue-500">Product List</a>
                                &gt;
                                <span>Edit Product</span>
                            </div>
                            <% if (successMessage) { %>
                                <div id="success_div"
                                    class="bg-green-500 text-white p-2 mb-5 text-center rounded transition-opacity duration-500 ease-in-out">
                                    <p id="success_message">
                                        <%= successMessage%>
                                    </p>
                                </div>
                                <% } %>

                                    <% if (errorMessage) { %>
                                        <div id="error_div"
                                            class="bg-red-600 text-white p-2 mb-5 text-center rounded transition-opacity duration-500 ease-in-out">
                                            <p id="error_message">
                                                <%= errorMessage %>
                                            </p>
                                        </div>
                                    <% } %>
                                    <div class="mt-6 bg-white p-6 rounded-lg shadow-md">
                                        <h3 class="text-lg font-semibold text-gray-700">General Information</h3>
                                        <div class="mt-4">
                                            <label class="block text-gray-600">Product Name</label>
                                            <input type="text" name="name" value="<%= productDetails.name %>"
                                                class="w-full mt-2 p-2 border rounded-md"
                                                placeholder="Type product name here...">
                                            <input type="text" name="originalName" value="<%= productDetails.name %>" hidden>
                                        </div>
                                        <div class="mt-4">
                                            <label class="block text-gray-600">Description</label>
                                            <textarea name="description"
                                                class="w-full mt-2 p-2 border rounded-md" rows="4"
                                                placeholder="Type product description here..."><%= productDetails.description %></textarea>
                                        </div>
                                    </div>
                                    <div class="mt-6 bg-white p-6 rounded-lg shadow-md">
                                        <h3 class="text-lg font-semibold text-gray-700">Media</h3>
                                        <!-- <% productDetails.image.forEach((image,index)=>{ %>
                                        <div class="row">
                                            <div id="previewImage<%= index %>" class="card-body align-items-center" style="margin-bottom: 20px;">
                                                <input type="hidden" name="originalImage<%= index %>" value="<%= image %>">
                                                <img class="rounded" src="/uploads/product-images/<%= image %>" alt="" id="imgView<%= index %>">
                                                <i onlick="deleteSingleImage()" style="position: absolute; margin-left: .5rem; cursor: pointer;" class="fa-thin fa-x"></i>
                                                <input class="form-control border" type="file" name="images" id="input<%= index %>"
                                                    accept="image/png, image/jpeg, image/jpg"
                                                    onchange="viewImage(event,'<%= index %>')">
                                                <div id="productName_error" class="error-message"></div>
                                            </div>
                                        </div>
                                        <% }) %> -->
                                        <input type="file" id="imageInput" accept="image/*">
                                        <div id="addedImagesContainer" class="thumbnails-container flex flex-wrap gap-2 bg-gray-200 p-4 rounded-md"></div>

                                        <!-- Cropper Modal -->
                                        <div id="cropperModal" class="image-cropper d-flex flex-col align-items-center" style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                            <img id="imageToCrop" class="object-contain">
                                        </div>
                                        <button type="button" id="cropButton" class="btn-sm btn-primary">Crop Image</button>
                                        <button id="cancelCropButton" class="btn-sm btn-secondary">Cancel</button>
                                        <div id="existingImagesContainer flex flex-col m-4">
                                            <b>Already uploaded images</b>
                                            <div class="flex space-x-2 w-full">
                                                <% productDetails.image.forEach((img, index) => { %>
                                                    <div class="image-preview bg-gray-200 w-[210px] m-2 p-2 rounded-md">
                                                        <img src="/uploads/product-images/<%= img %>" class="object-contain" alt="Product Image">
                                                        <input type="checkbox" name="removedImages" value="<%= img %>"> Remove
                                                    </div>
                                                <% }) %>
                                            </div>
                                        </div>
                                        
                                        <!-- <div
                                            class="mt-4 border-dashed border-2 border-gray-300 p-6 rounded-md text-center">
                                            <input type="file" name="image" multiple> 
                                            <i class="fas fa-image text-4xl text-gray-300"></i>
                                            <p class="mt-2 text-gray-500">Drag and drop image here, or click add
                                                image
                                            </p>
                                            <button
                                                class="mt-4 px-4 py-2 bg-purple-500 text-white rounded-md">Add
                                                Image
                                            </button>
                                        </div> -->
                                    </div>
                                    <div class="mt-6 bg-white p-6 rounded-lg shadow-md">
                                        <h3 class="text-lg font-semibold text-gray-700">Pricing</h3>
                                        <div class="mt-4 flex space-x-2">
                                            <div class="w-1/2">
                                                <label class="block text-gray-600">Base Price</label>
                                                <div class="flex items-center mt-2">
                                                    <span
                                                        class="px-3 py-2 bg-gray-200 border border-r-0 rounded-l-md">$</span>
                                                    <input type="number" name="price"
                                                        value="<%= productDetails.sellingPrice %>"
                                                        class="w-full p-2 border rounded-r-md"
                                                        placeholder="Type base price here...">
                                                </div>
                                            </div>
                                            <div class="w-1/2">
                                                <label class="block text-gray-600">Maximum Retail Price</label>
                                                <div class="flex items-center mt-2">
                                                    <span
                                                        class="px-3 py-2 bg-gray-200 border border-r-0 rounded-l-md">$</span>
                                                    <input type="number" name="mrp"
                                                        value="<%= productDetails.mrp %>"
                                                        class="w-full p-2 border rounded-r-md"
                                                        placeholder="Type maximum retail price here...">
                                                </div>
                                            </div>
                                        </div>
                                        <div class="mt-4 flex space-x-4">
                                            <div class="w-1/2">
                                                <label for="offerType" class="block text-gray-600">Discount
                                                    Type</label>
                                                <select id="offerType" name="offerType"
                                                    class="w-full mt-2 p-2 border rounded-md">
                                                    <% offerTypes.forEach((type,index)=> { %>
                                                        <option value="<%= type %>"
                                                            <%=type===productDetails.offerType ? 'selected' : ''
                                                            %>><%= type %>
                                                        </option>
                                                        <% }) %>
                                                </select>
                                            </div>
                                            <div class="w-1/2">
                                                <label class="block text-gray-600">Discount Percentage
                                                    (%)</label>
                                                <input type="number" name="offer"
                                                    value="<%= productDetails.offer %>"
                                                    class="w-full mt-2 p-2 border rounded-md"
                                                    placeholder="Type discount percentage...">
                                            </div>
                                            <div class="w-1/2">
                                                <label class="block text-gray-600">Maximum Discount
                                                    Amount</label>
                                                <input type="number" name="maxDiscount"
                                                    value="<%= productDetails.maxDiscount %>"
                                                    class="w-full mt-2 p-2 border rounded-md"
                                                    placeholder="Type Maximum discount amount...">
                                            </div>
                                        </div>
                                    </div>
                                    <div class="mt-6 bg-white p-6 rounded-lg shadow-md">
                                        <h3 class="text-lg font-semibold text-gray-700">Inventory</h3>
                                        <div class="mt-4">
                                            <label class="block text-gray-600">Quantity</label>
                                            <input type="number" name="stock"
                                                value="<%= productDetails.inventory %>"
                                                class="w-full mt-2 p-2 border rounded-md"
                                                placeholder="Type product quantity here...">
                                        </div>
                                    </div>
                        </div>
                        <!-- Right Sidebar -->
                        <div class="flex flex-col w-70 p-6">
                            <div class="mt-6 bg-white p-6 rounded-lg shadow-md">
                                <h3 class="text-lg font-semibold text-gray-700">Category</h3>
                                <div class="mt-4">
                                    <label class="block text-gray-600">Product Category</label>
                                    <select name="category" class="w-full mt-2 p-2 border rounded-md">
                                        <% categories.forEach((category,index)=> { %>
                                            <option value="<%= category._id %>" <%=category===productDetails.category
                                                ? 'selected' : '' %>>
                                                <%= category.name %>
                                            </option>
                                            <% }) %>
                                    </select>
                                </div>
                                <div class="mt-4">
                                    <label class="block text-gray-600">Product Tags</label>
                                    <input name="tags" placeholder="Separate the tags using Comma(,)"
                                        value="<%= productDetails.tags.join(', ') %>"
                                        class="w-full mt-2 p-2 border rounded-md">
                                </div>
                            </div>
                            <div class="mt-6 bg-white p-6 rounded-lg shadow-md">
                                <h3 class="text-lg font-semibold text-gray-700">Status</h3>
                                <div class="mt-4">
                                    <label for="isAvailable" class="block text-gray-600">Product Status</label>
                                    <select name="isAvailable" class="w-full mt-2 p-2 border rounded-md">
                                        <% isAvailable.forEach(isAvail=> { %>
                                            <option value="<%= isAvail %>" <%=isAvail===productDetails.isAvail ? 'selected'
                                                : '' %>>
                                                <%= isAvail %>
                                            </option>
                                            <% }) %>
                                    </select>
                                </div>
                            </div>
                            <div class="mt-6 bg-white p-6 rounded-lg shadow-md">
                                <h3 class="text-lg font-semibold text-gray-700">Is Listed</h3>
                                <div class="mt-4">
                                    <label class="block text-gray-600">Is Listed</label>
                                    <select name="isListed" class="w-full mt-2 p-2 border rounded-md">
                                        <option value="true" <%=productDetails.isListed ? 'selected' : '' %>>Yes
                                        </option>
                                        <option value="false" <%=!productDetails.isListed ? 'selected' : '' %>>No
                                        </option>
                                    </select>
                                </div>
                            </div>
                        </div>
                        <div class="flex justify-end mt-6">
                            <button type="button" onclick="window.history.back()"
                                class="px-4 py-2 bg-gray-200 text-gray-700 rounded-md">Cancel</button>
                            <button type="submit"
                                class="ml-2 px-6 py-2 bg-purple-500 text-white rounded-md">Confirm Edits</button>
                        </div>
                    </form>
                </div>
        </div>
</div>
<script src="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.js"></script>

<script>
let cropper;
const addedImagesContainer = document.getElementById('addedImagesContainer');
const imageInput = document.getElementById('imageInput');
const cropperModal = document.getElementById('cropperModal');
const imageToCrop = document.getElementById('imageToCrop');

imageInput.addEventListener('change', function (event) {
    const file = event.target.files[0];
    if (cropper) cropper.destroy();
    if (file) {
        const reader = new FileReader();

        reader.onload = function (e) {
            imageToCrop.src = e.target.result;
            cropperModal.style.display = 'block';

            // Initialize Cropper.js
            cropper = new Cropper(imageToCrop, {
                aspectRatio: 1,
                viewMode: 1,
                background: false,
                autoCropArea: 1,
                zoomable: true,
            });
        };
        reader.readAsDataURL(file); // Read the selected file
    }
});

// Create a div to hold the cropped image and hidden input
const imageContainer = document.createElement('div');

// Handle cropping the image
document.getElementById('cropButton').addEventListener('click', function () {
    const croppedCanvas = cropper.getCroppedCanvas();
    const croppedDataURL = croppedCanvas.toDataURL();

    // Check for duplicates
    const existingImages = addedImagesContainer.querySelectorAll('img');
    for (let img of existingImages) {
        if (img.src === croppedDataURL) {
            alert('This image has already been added.');
            return;
        }
    }
    
    imageContainer.classList.add('flex', 'space-x-2'); // Optional: add class for styling

    // Create an image element for the cropped image
    const croppedImage = document.createElement('img');
    croppedImage.src = croppedDataURL;
    croppedImage.style.maxWidth = 200; // Set a width for the image
    croppedImage.style.height = 'auto';
    croppedImage.classList.add('rounded-md');


    // Create a hidden input to store the base64 image data
    const hiddenInput = document.createElement('input');
    hiddenInput.type = 'hidden';
    hiddenInput.name = 'images[]'; // Name it to collect as an array
    hiddenInput.value = croppedDataURL;

    // Adding a remove button to each image container
    const removeButton = document.createElement('button');
    removeButton.textContent = 'Remove';
    removeButton.classList.add('remove-button', 'fas', 'fa-cross'); // Add CSS class for styling
    removeButton.onclick = function () {
        imageContainer.remove(); // Remove the container including the image and hidden input
    };
    
    // Append the cropped image and hidden input to the image container
    imageContainer.appendChild(croppedImage);
    imageContainer.appendChild(hiddenInput);
    // Append the remove button to the image container
    imageContainer.appendChild(removeButton);

    // Append the image container to the added images container
    addedImagesContainer.appendChild(imageContainer);

    // Reset the input and close the modal
    imageInput.value = ''; // Reset the input
    // Clear the cropper and hide the modal
    cropper.destroy(); // Destroy the cropper instance
    cropperModal.style.display = 'none'; // Hide the modal
    imageToCrop.src = ''; // Clear the image source
});

// Handle canceling the crop
document.getElementById('cancelCropButton').addEventListener('click', function () {
    cropperModal.style.display = 'none'; // Hide the modal
    cropper.destroy(); // Destroy the cropper instance
    imageToCrop.src = ''; // Clear the image source
});


// Optionally, if you want to manage the removal of images from the addedImagesContainer
// addedImagesContainer.addEventListener('click', function (event) {
//     if (event.target.tagName === 'IMG') {
//         // Remove the corresponding hidden input when an image is removed
//         const hiddenInputs = addedImagesContainer.querySelectorAll('input[type="hidden"]');
//         const index = Array.from(addedImagesContainer.children).indexOf(event.target);
//         if (index !== -1) {
//             hiddenInputs[index].remove(); // Remove the hidden input for the removed image
//             event.target.remove(); // Remove the displayed image
//         }
//     }
// });


// addedImagesContainer.addEventListener('click', function (event) {
//     if (event.target.tagName === 'IMG') {
//         event.target.parentElement.remove(); // Remove the whole container
//     }
// });


</script>
<!-- <script>


    function validateAndSubmit() {
        if (validateForm()) {
            document.forms[0].submit();
        }
    }




    function validateForm() {
        let imageDatas = false
        console.log("validate form");
        clearErrorMessages();
        const name = document.getElementsByName('productName')[0].value;
        const description = document.getElementsByName('descriptionData')[0].value;
        const brand = document.getElementsByName('brand')[0].value;
        const price = document.getElementsByName('regularPrice')[0].value;
        const saleprice = document.getElementsByName('salePrice')[0].value;
        const color = document.getElementsByName('color')[0].value;
        const category = document.getElementsByName('category')[0].value;
        const images = document.getElementById('input1')
        const quantity = document.getElementsByName('quantity')
        imageDatas = document.getElementById("imageDatas")?.value;
        let isValid = true;
        if (name.trim() === "") {
            displayErrorMessage('productName-error', 'Please enter a product name.');
            isValid = false;
        }

        if (description === '') {
            displayErrorMessage('description-error', 'Please enter a product description.');
            isValid = false;
        }


        if (parseInt(quantity) < 0) {
            displayErrorMessage('quantity-error', 'Please enter a valid non-negative quantity.');
            isValid = false;
        }




        if (!/^\d+(\.\d{1,2})?$/.test(price) || parseFloat(price) < 0) {
            displayErrorMessage('regularPrice-error', 'Please enter a valid non-negative price.');
            isValid = false;
        }
        if (!/^\d+(\.\d{1,2})?$/.test(saleprice) || parseFloat(saleprice) < 0) {
            displayErrorMessage('salePrice-error', 'Please enter a valid non-negative price.');
            isValid = false;
        }

        if (color.trim() === "") {
            displayErrorMessage('color-error', 'Please enter a color.');
            isValid = false;
        }
        if (!imageDatas && images.files.length === 0) {
            displayErrorMessage("images-error", 'Please select an image.');
            isValid = false;
        }
        return isValid;
    }

    function displayErrorMessage(elementId, message) {
        var errorElement = document.getElementById(elementId);
        errorElement.innerText = message;
        errorElement.style.display = "block";
    }


    function clearErrorMessages() {
        const errorElements = document.getElementsByClassName('error-message');
        Array.from(errorElements).forEach(element => {
            element.innerText = '';
        });
        const errorMessage = document.getElementById('errorMessage');


    }




    function viewImage1(event) {
        document.getElementById('imgView1').src = URL.createObjectURL(event.target.files[0])
    }


    function viewImage2(event) {
        document.getElementById('imgView2').src = URL.createObjectURL(event.target.files[0])
    }


    function viewImage3(event) {
        document.getElementById('imgView3').src = URL.createObjectURL(event.target.files[0])
    }


    function viewImage4(event) {
        document.getElementById('imgView4').src = URL.createObjectURL(event.target.files[0])
    }




    function viewImage(event, index) {
        let input = event.target;
        let reader = new FileReader();
        reader.onload = function () {
            let dataURL = reader.result;
            let image = document.getElementById('imgView' + index);
            image.src = dataURL;
            let cropper = new Cropper(image, {
                aspectRatio: 1,
                viewMode: 1,
                guides: true,
                background: false,
                autoCropArea: 1,
                zoomable: true
            });
            let cropperContainer = document.querySelector('#croppedImg' + index).parentNode;
            cropperContainer.style.display = 'block';
            let saveButton = document.querySelector('#saveButton' + index);
            saveButton.addEventListener('click', async function () {
                let croppedCanvas = cropper.getCroppedCanvas();
                let croppedImage = document.getElementById("croppedImg" + index);
                croppedImage.src = croppedCanvas.toDataURL('image/jpeg', 1.0);
                let timestamp = new Date().getTime();
                let fileName = `cropped-img-${timestamp}-${index}.png`;
                await croppedCanvas.toBlob(blob => {
                    let input = document.getElementById('input' + index);
                    let imgFile = new File([blob], fileName, blob)
                    const fileList = new DataTransfer();
                    fileList.items.add(imgFile);
                    input.files = fileList.files
                });
                cropperContainer.style.display = 'none';
            });
        };
        reader.readAsDataURL(input.files[0]);
    }


    const selectedImages = [];
    document.getElementById("imageInput").addEventListener("change", handleFileSelect);


    function handleFileSelect(event) {
        const addedImagesContainer = document.getElementById("addedImagesContainer");
        addedImagesContainer.innerHTML = "";
        const files = event.target.files;
        for (let i = 0; i < files.length; i++) {
            const file = files[i];
            selectedImages.push(file);
            const thumbnail = document.createElement("div");
            thumbnail.classList.add("thumbnail");
            const img = document.createElement("img");
            img.src = URL.createObjectURL(file);
            img.alt = "thumbnail";
            img.style.width = "50px";
            img.style.height = "auto";
            const removeIcon = document.createElement("span");
            removeIcon.classList.add("remove-icon");
            removeIcon.innerHTML = "&times;";
            removeIcon.addEventListener("click", function () {
                const index = selectedImages.indexOf(file);
                if (index !== -1) {
                    selectedImages.splice(index, 1);
                }
                thumbnail.remove();
            });
            thumbnail.appendChild(img);
            thumbnail.appendChild(removeIcon);
            addedImagesContainer.appendChild(thumbnail);
        }
    };

</scrip   -->
